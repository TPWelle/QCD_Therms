#ifndef LATTICEDATA_H
#define LATTICEDATA_H

#include <vector>

//==============================================================================
//Newer Lattice points come from: https://arxiv.org/abs/1309.5258
//------------------------------------------------------------------------------

const std::vector<double> Lattice_Temps={
	110.0, 115.0, 120.0, 125.0, 130.0, 135.0, 140.0, 145.0, 150.0, 155.0,
	160.0, 165.0, 170.0, 175.0, 180.0, 185.0, 190.0, 195.0, 200.0, 205.0, 210.0,
	215.0, 220.0, 225.0, 230.0, 235.0, 240.0, 245.0, 250.0, 260.0, 270.0, 280.0,
	290.0, 300.0, 310.0, 320.0, 330.0, 340.0, 350.0, 360.0, 370.0, 380.0, 390.0,
	400.0, 410.0, 420.0, 430.0, 440.0, 445.0, 450.0, 455.0, 460.0, 465.0, 470.0,
	475.0, 480.0, 485.0, 490.0, 495.0, 500.0, 505.0, 510.0
};

const std::vector<double> PressPerT4 = {
	0.242, 0.274, 0.308, 0.348, 0.393, 0.444, 0.501, 0.565, 0.633, 0.712,
	0.798, 0.886, 0.981, 1.08, 1.18, 1.28, 1.39, 1.49, 1.58, 1.68, 1.77, 1.86, 1.95,
	2.03, 2.12, 2.2, 2.27, 2.35, 2.42, 2.55, 2.68, 2.78, 2.89, 2.98, 3.07, 3.15, 3.23,
	3.29, 3.36, 3.41, 3.47, 3.52, 3.56, 3.6, 3.64, 3.68, 3.71, 3.74, 3.76, 3.77, 3.79,
	3.8, 3.81, 3.82, 3.84, 3.85, 3.86, 3.87, 3.88, 3.89, 3.9, 3.91
};

const std::vector<double> dPressPerT4 = {
	0.115, 0.113, 0.113, 0.113, 0.111, 0.105, 0.0978,
	0.0895, 0.0823, 0.077, 0.0735, 0.0702, 0.0666, 0.063, 0.06, 0.058,
	0.0565, 0.0556, 0.0546, 0.0535, 0.0523, 0.0517, 0.0532, 0.0544,
	0.0556, 0.0565, 0.0574, 0.0583, 0.0591, 0.0609, 0.0625, 0.0642,
	0.0661, 0.0681, 0.0702, 0.0723, 0.0746, 0.076, 0.0773, 0.0796,
	0.0817, 0.0837, 0.0855, 0.0874, 0.0894, 0.0912, 0.0933, 0.0953,
	0.0964, 0.0975, 0.0985, 0.0996, 0.101, 0.102, 0.103, 0.104, 0.105,
	0.106, 0.108, 0.109, 0.11, 0.111
};

const std::vector<double> TraceAnomaly = {
	0.722, 0.761, 0.844, 0.991, 1.18, 1.4, 1.65, 1.91, 2.2,
	2.49, 2.77, 3.06, 3.32, 3.53, 3.69, 3.81, 3.88, 3.88, 3.88, 3.85, 3.81,
	3.77, 3.7, 3.63, 3.57, 3.51, 3.45, 3.38, 3.32, 3.21, 3.09, 2.98, 2.89,
	2.78, 2.67, 2.56, 2.44, 2.33, 2.23, 2.13, 2.05, 1.96, 1.87, 1.79, 1.7,
	1.62, 1.54, 1.45, 1.41, 1.37, 1.34, 1.31, 1.28, 1.25, 1.23, 1.2, 1.18,
	1.15, 1.13, 1.1, 1.08, 1.05
};

const std::vector<double> dTraceAnomaly = {
	0.504, 0.416, 0.324, 0.234, 0.208, 0.281, 0.381, 0.45,
	0.46, 0.39, 0.295, 0.219, 0.198, 0.185, 0.16, 0.147, 0.169, 0.196,
	0.229, 0.224, 0.204, 0.17, 0.142, 0.126, 0.122, 0.12, 0.12, 0.119,
	0.116, 0.107, 0.0952, 0.0878, 0.0881, 0.0967, 0.109, 0.121, 0.131,
	0.143, 0.157, 0.171, 0.185, 0.196, 0.201, 0.204, 0.203, 0.198, 0.19,
	0.175, 0.168, 0.163, 0.16, 0.159, 0.159, 0.159, 0.158, 0.157, 0.157,
	0.156, 0.155, 0.154, 0.151, 0.148
};


/*
// Lattice data from Table 5 (pg 30) of "The QCD equation of state with 
// dynamical quarks" by Borsnyi et al, 2010,  arXiv:1007.2580.
// Uses continuum estimate which is the authors' best value.
//Returns temperatures where lattice points were computed

std::vector<double> GetLattice_Temps(double mu_B){
	std::vector<double> Temps;
	if(mu_B==0.0){
		Temps={100.,115.,129.,139.,147.,152.,158.,166.,175.,200.,228.,
	   250.,299.,366.,500.,600.,800.,1000.};
	}else if(mu_B==100.0 || mu_B==200.0 || mu_B==300.0 || mu_B==400.0){
		Temps={125.,130.,135.,140.,145.,150.,155.,160.,165.,170.,175.,
		  180.,185.,190.,200.,220.,240.,260.,280.,300.,320.,340.,360.,380.,400.};
	}else{
		Temps={};
	}
	return Temps;
}


std::vector<double> GetLattice_Press_Per_T4(double mu_B){
	std::vector<double> PressPerT4;
	if(mu_B==0.0){
		PressPerT4={.22,.29,.37,.46,.55,.63,.73,.89,1.08,1.61,2.11,
	   2.43,2.94,3.38,3.76,3.93,4.12,4.23};
	}else if(mu_B==100.0){
		PressPerT4={.35,.39,.43,.48,.54,.62,.70,.79,.90,1.0,1.11,1.22,1.33,
		 1.43,1.64,2.01,2.32,2.58,2.79,2.96,3.12,3.25,3.36,3.45,3.53};
	}else if(mu_B==200.0){
		PressPerT4={.37,.41,.46,.52,.59,.67,.77,.86,.97,1.09,1.20,1.31,1.42,
		 1.52,1.73,2.09,2.39,2.64,2.84,3.01,3.16,3.29,3.40,3.49,3.56};
	}else if(mu_B==300.0){
		PressPerT4={.40,.45,.52,.59,.67,.77,.88,.99,1.11,1.23,1.34,1.46,1.57,
		 1.67,1.87,2.22,2.51,2.74,2.93,3.09,3.23,3.35,3.45,3.54,3.61};
	}else if(mu_B==400.0){
		PressPerT4={.44,.51,.59,.68,.78,.90,1.03,1.16,1.29,1.42,1.55,
		 1.66,1.78,1.88,2.08,2.41,2.67,2.89,3.06,3.21,3.33,3.44,3.53,3.61,3.67};
	}else{
		PressPerT4={};
	}
	return PressPerT4;
}

std::vector<double> GetLattice_dPress_per_T4(double mu_B){
	std::vector<double> dPressPerT4;
	if(mu_B==0.0){
		dPressPerT4 = {0.04,0.06,0.06,0.06,0.07,0.07,0.07,0.07,
		 0.06,0.06,0.07,0.07,0.07,0.08,0.05,0.05,0.06,0.06};
		// add systematic uncerainty of 0.6 not in listed table values, 
		// but mentioned in table caption:
		for(double& dP : dPressPerT4)
			dP += 0.06;
	}else if(mu_B==100.0){
		dPressPerT4 = {.06,.06,.06,.06,.07,.07,.07,.07,.07,.07,.06,.06,.05,
		 .06,.06,.07,.07,.07,.07,.07,.07,.08,.08,.08,.08};
	}else if(mu_B==200.0){
		dPressPerT4 = {.06,.06,.06,.06,.07,.07,.07,.07,.07,.07,.06,.06,
		 .05,.06,.06,.07,.07,.07,.07,.07,.07,.08,.08,.08,.08};
	}else if(mu_B==300.0){
		dPressPerT4 = {.06,.06,.06,.06,.07,.07,.07,.07,.07,.07,
		 .06,.06,.06,.06,.06,.07,.07,.07,.07,.07,.07,.08,.08,.08,.08};
	}else if(mu_B==400.0){
		dPressPerT4 = {.06,.06,.06,.07,.08,.08,.08,.08,.07,.07,.06,.06,
		 .06,.06,.06,.07,.07,.07,.07,.07,.07,.08,.08,.08,.08};
	}else{
		dPressPerT4 = {};
	}
	return dPressPerT4;
}


std::vector<double> GetLattice_TraceAnomaly(double mu_B){
	std::vector<double> TraceAnomaly;
	if(mu_B==0.0){
		TraceAnomaly={0.43,0.56,0.93,1.46,1.99,2.47,2.98,
		 3.43,3.79,4.03,3.62,3.20,2.57,1.80,1.08,0.80,0.51,0.43};
	}else if(mu_B==100.0){
		TraceAnomaly={.8,1.0,1.3,1.6,2.0,2.4,2.9,3.2,3.5,3.7,3.9,4.0,
		 4.1,4.1,4.1,3.8,3.4,3.0,2.8,2.6,2.3,2.1,1.9,1.7,1.5};
	}else if(mu_B==200.0){
		TraceAnomaly={1.0,1.3,1.6,1.9,2.3,2.8,3.3,3.6,3.8,4.0,4.1,4.2,4.3,
		 4.3,4.2,3.9,3.4,3.1,2.8,2.6,2.3,2.1,1.9,1.7,1.5};
	}else if(mu_B==300.0){
		TraceAnomaly={1.3,1.6,2.0,2.5,2.9,3.4,3.9,4.2,4.4,4.5,4.6,4.6,4.6,
		 4.5,4.4,4.0,3.5,3.1,2.8,2.6,2.3,2.1,1.9,1.7,1.5};
	}else if(mu_B==400.0){
		TraceAnomaly={1.7,2.1,2.6,3.2,3.7,4.3,4.8,5.1,5.2,5.2,5.2,5.1,5.0,
		 4.9,4.7,4.1,3.6,3.1,2.8,2.6,2.4,2.1,1.9,1.7,1.5};
	}else{
		TraceAnomaly={};
	}
	return TraceAnomaly;
}


std::vector<double> GetLattice_dTraceAnomaly(double mu_B){
	std::vector<double> dTraceAnomaly;
	if(mu_B==0.0){
		dTraceAnomaly={0.17,0.31,0.19,0.18,0.21,0.21,0.16,0.18,0.15,
		 0.15,0.16,0.14,0.24,0.16,0.04,0.05,0.05,0.11};
	}else if(mu_B==100.0){
		dTraceAnomaly={.2,.2,.2,.2,.2,.2,.2,.2,.2,.2,.2,.1,.1,.1,.2,.2,
		 .1,.1,.2,.2,.2,.2,.2,.1,.1};
	}else if(mu_B==200.0){
		dTraceAnomaly={.2,.2,.2,.2,.2,.2,.2,.2,.2,.2,.2,.1,.1,.1,.2,.2,
		 .1,.1,.2,.2,.2,.2,.2,.1,.1};
	}else if(mu_B==300.0){
		dTraceAnomaly={.2,.2,.2,.2,.2,.2,.2,.2,.2,.2,.2,.1,.1,.1,.2,.2,
		 .1,.1,.2,.2,.2,.2,.2,.1,.1};
	}else if(mu_B==400.0){
		dTraceAnomaly={.3,.3,.3,.3,.3,.2,.2,.2,.2,.2,.2,.1,.1,.1,.2,.2,
		 .1,.1,.2,.2,.2,.2,.2,.1,.1};
	
	}else{
		dTraceAnomaly={};
	}
	return dTraceAnomaly;
}

*/




#endif